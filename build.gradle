plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'io.freefair.lombok' version '8.6'
	id 'com.diffplug.spotless' version '6.19.0'
	id 'jacoco'
}

apply from: "${project.rootDir}/gradle/spotless.gradle"

group = 'com.hnvas'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	implementation 'org.apache.commons:commons-lang3:3.16.0'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-undertow'
	implementation 'org.springframework.retry:spring-retry'

	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:mockserver'
	testImplementation 'org.mock-server:mockserver-netty:5.15.0'
	testImplementation 'org.mock-server:mockserver-client-java:5.15.0'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

configurations {
	implementation.exclude module: 'spring-boot-starter-tomcat'
}

tasks.named('build') {
	dependsOn 'spotlessCheck'
}

tasks.register('integrationTests', Test) {
	group = 'verification'
	useJUnitPlatform {
		includeTags 'integrationTest'
	}
}

tasks.register('unitTests', Test) {
	group = 'verification'
	useJUnitPlatform {
		includeTags 'unitTest'
	}
}

tasks {
	test {
		useJUnitPlatform()
	}

	jacocoTestReport {
		reports {
			executionData.setFrom(fileTree(project.projectDir).include("build/jacoco/*.exec"))
			xml.required = true
			html.required = true
		}
	}
}


